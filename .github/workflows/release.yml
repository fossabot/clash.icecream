name: Release

on:
  push:
    tags:
      - '*'

jobs:
 build:
  runs-on: ubuntu-latest
  steps:
    - name: checkout code
      uses: actions/checkout@v1
    - name: install Go
      uses: actions/setup-go@v1
      with:
       go-version: 1.13.x
    - name: set GOPATH
      # temporary fix
      # see https://github.com/actions/setup-go/issues/14
      run: |
        echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
        echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
      shell: bash
    - name: install Go pkg
      run: |
       go get golang.org/x/mobile/cmd/gomobile
       go get golang.org/x/mobile/cmd/gobind
       go get github.com/golang/dep/cmd/dep
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: build tun2socks
      run: |
       # go get github.com/trojan-gfw/igniter-go-libs/...
       mkdir -p $GOPATH/src/github.com/trojan-gfw && cd $_
       git clone https://github.com/trojan-gfw/igniter-go-libs
       cd $GOPATH/src/github.com/trojan-gfw/igniter-go-libs
       dep ensure -update
       gomobile init
       make android
       cp build/golibs.aar $(dirname $GITHUB_WORKSPACE)/clash.icecream/app/libs/tun2socks.aar

    - name: put MMDB
      run: |
       wget http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz
       echo $(tar -tvf GeoLite2-Country.tar.gz | grep mmdb)
       name=$(tar -tvf GeoLite2-Country.tar.gz | grep mmdb | awk '{print $(NF)}')
       echo $name
       tar -xzvf GeoLite2-Country.tar.gz $name
       cp $name $(dirname $GITHUB_WORKSPACE)/clash.icecream/app/src/main/res/raw/country.mmdb
       touch $(dirname $GITHUB_WORKSPACE)/clash.icecream/app/src/main/res/raw/config.yaml

    - name: build
      run: |
        echo $KEYSTORE_FILE | base64 --decode > app/sign.keystore
        echo $SIGNING | base64 --decode > signing.properties
        ls -alh app/
        ./gradlew assembleRelease --stacktrace
        find . -name "*.apk"
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        SIGNING: ${{ secrets.SIGNING }}

    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: upload release apk
      id: upload-release-apk
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/release/app-release.apk
        asset_name: icecream.apk
        asset_content_type: application/zip

    - name: upload release mmdb
      id: upload-release-mmdb
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/src/main/res/raw/country.mmdb
        asset_name: country.mmdb
        asset_content_type: application/zip

    - name: upload release tun2socks
      id: upload-release-tun2socks
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/libs/tun2socks.aar
        asset_name: tun2socks.aar
        asset_content_type: application/zip

